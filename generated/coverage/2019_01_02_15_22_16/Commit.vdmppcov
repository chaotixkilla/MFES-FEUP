class Commit

types
-- TODO Define types here
	public String = Utilities`String;

values
-- TODO Define values here

instance variables
-- TODO Define instance variables here
	private committer: User;
	private branch: Branch;
	private identifier: String;
	private message: String;

operations
-- TODO Define operations here
	public Commit: User * Branch * String * String ==> Commit
	Commit(user, destinationBranch, id, commitMessage) == (
		committer := user;
		branch := destinationBranch;
		identifier := id;
		message := commitMessage;
		return self;
	);
	
	public getCommitter: () ==> User
	getCommitter() == (
		return committer;
	);
	
	public getBranch: () ==> Branch
	getBranch() == (
		return branch;
	);
	
	public getIdentifier: () ==> String
	getIdentifier() == (
		return identifier;
	);
	
	public getMessage: () ==> String
	getMessage() == (
		return message;
	);

functions
-- TODO Define functiones here

traces
-- TODO Define Combinatorial Test Traces here

end Commit